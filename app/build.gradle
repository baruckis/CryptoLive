/*
 * Copyright 2019 Andrius Baruckis www.baruckis.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

repositories {
    maven { url 'https://jitpack.io' }
}

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.baruckis.cryptolive.testing.OpenClass'
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.baruckis.cryptolive"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/INDEX.LIST'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.cardview:cardview:$cardview_version"
    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    // // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // ReactiveStreams support for LiveData.
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    implementation "com.google.android.material:material:$design_version"

    // Dependency injection - Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // An HTTP & HTTP/2 client - OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"

    // WebSocket client - Scarlet
    implementation "com.github.tinder.scarlet:scarlet:$scarlet_version"
    implementation "com.github.tinder.scarlet:scarlet-lifecycle-android:$scarlet_version"
    implementation "com.github.tinder.scarlet:scarlet-message-adapter-moshi:$scarlet_version"
    implementation ("com.github.tinder.scarlet:scarlet-protocol-websocket-okhttp:$scarlet_version") {
        // Exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import.
        exclude module: 'okhttp'
    }
    implementation "com.github.tinder.scarlet:scarlet-stream-adapter-rxjava2:$scarlet_version"

    // Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mockito_kotlin_version"
    testImplementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    testImplementation "android.arch.core:core-testing:$testing_version"

    androidTestImplementation "androidx.test:runner:$runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}
